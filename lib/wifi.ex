# Generated by erl2ex (http://github.com/dazuma/erl2ex)
# From Erlang source: c:/Users/pip43/Documents/Projects/lora_tranciever/lib/wifi.erl
# At: 2023-07-15 19:06:53

defmodule :wifi do
  def start() do
    case(verify_platform(:atomvm.platform())) do
      :ok ->
        start_network()

      error ->
        error
    end
  end

  defp start_network() do
    config = [
      ap: [
        {:ap_started, &ap_started/0},
        {:sta_connected, &sta_connected/1},
        {:sta_ip_assigned, &sta_ip_assigned/1},
        {:sta_disconnected, &sta_disconnected/1} | :maps.get(:ap, :config.get())
      ],
      sta: [
        {:connected, &connected/0},
        {:got_ip, &got_ip/1},
        {:disconnected, &disconnected/0} | :maps.get(:sta, :config.get())
      ],
      sntp: [host: ~c"pool.ntp.org"]
    ]

    case(:network.start(config)) do
      {:ok, _pid} ->
        :timer.sleep(:infinity)

      error ->
        error
    end
  end

  defp ap_started() do
    :io.format(~c"AP started.~n")
  end

  defp sta_connected(mac) do
    :io.format(~c"STA connected with mac ~p~n", [mac])
  end

  defp sta_disconnected(mac) do
    :io.format(~c"STA disconnected with mac ~p~n", [mac])
  end

  defp sta_ip_assigned(address) do
    :io.format(~c"STA assigned address ~p~n", [address])
  end

  defp connected() do
    :io.format(~c"STA connected.~n")
  end

  defp got_ip(ipInfo) do
    :io.format(~c"Got IP: ~p.~n", [ipInfo])
    loop()
  end

  defp disconnected() do
    :io.format(~c"STA disconnected.~n")
  end

  defp verify_platform(:esp32) do
    :ok
  end

  defp verify_platform(platform) do
    {:error, {:unsupported_platform, platform}}
  end

  defp loop() do
    {{year, month, day}, {hour, minute, second}} = :erlang.universaltime()

    :io.format(~c"Date: ~p/~p/~p ~p:~p:~p (~pms)~n", [
      year,
      month,
      day,
      hour,
      minute,
      second,
      :erlang.system_time(:millisecond)
    ])

    :timer.sleep(5000)
    loop()
  end
end
